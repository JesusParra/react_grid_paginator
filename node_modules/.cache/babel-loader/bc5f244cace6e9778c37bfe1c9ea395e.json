{"ast":null,"code":"import _classCallCheck from \"/Users/jparra/source_code/ptm/ris_frontend/React/ris-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jparra/source_code/ptm/ris_frontend/React/ris-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jparra/source_code/ptm/ris_frontend/React/ris-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jparra/source_code/ptm/ris_frontend/React/ris-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jparra/source_code/ptm/ris_frontend/React/ris-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jparra/source_code/ptm/ris_frontend/React/ris-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jparra/source_code/ptm/ris_frontend/React/ris-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Pagination from \"react-js-pagination\";\nimport Bootstrap from 'bootstrap';\n\nvar User = function User(props) {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.status)));\n};\n\nvar Worklist =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Worklist, _React$Component);\n\n  function Worklist(props) {\n    var _this;\n\n    _classCallCheck(this, Worklist);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Worklist).call(this, props));\n    _this.state = {\n      users: [],\n      activePage: 1,\n      rows: 10,\n      pages: 10\n    };\n    _this.handlePageChange = _this.handlePageChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Worklist, [{\n    key: \"handlePageChange\",\n    value: function handlePageChange(pageNumber) {\n      console.log('Cambio de pagina');\n      console.log('Pagina activa: ' + this.state.activePage);\n      console.log('Registros por pagina: ' + this.state.rows);\n      console.log('Paginas a mostrar: ' + this.state.pages);\n      this.setState({\n        activePage: pageNumber\n      });\n      this.request();\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.request();\n    }\n  }, {\n    key: \"request\",\n    value: function request() {\n      var _this2 = this;\n\n      this.setState({\n        users: []\n      });\n      fetch('https://randomuser.me/api/?page=' + this.state.activePage + '&results=' + this.state.rows + '&seed=abc').then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        users.results.forEach(function (user) {\n          var data = {\n            name: user.name.first,\n            email: user.email,\n            status: 'Ok',\n            key: user.login.uuid\n          };\n\n          _this2.setState({\n            users: _this2.state.users.concat([data])\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.users.length > 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table table-responsive-sm table-bordered table-striped table-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Email\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Status\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, this.state.users.map(function (user) {\n          return React.createElement(User, {\n            key: user.key,\n            name: user.name,\n            email: user.email,\n            status: user.status,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          });\n        }))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(Pagination, {\n          activePage: this.state.activePage,\n          itemsCountPerPage: this.state.rows,\n          totalItemsCount: 100,\n          pageRangeDisplayed: this.state.pages,\n          onChange: this.handlePageChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }]);\n\n  return Worklist;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Worklist, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}), document.getElementById('worklist'), null);","map":{"version":3,"sources":["/Users/jparra/source_code/ptm/ris_frontend/React/ris-app/src/index.js"],"names":["React","ReactDOM","Pagination","Bootstrap","User","props","name","email","status","Worklist","state","users","activePage","rows","pages","handlePageChange","bind","pageNumber","console","log","setState","request","fetch","then","response","json","results","forEach","user","data","first","key","login","uuid","concat","length","map","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Pagination from \"react-js-pagination\";\nimport Bootstrap from 'bootstrap'\n\nconst User = (props) => (\n  <tr>\n    {\n      <td>{props.name}</td>}\n    {\n      <td>{props.email}</td>\n    }\n    {\n      <td><span className=\"badge badge-success\">{props.status}</span></td>\n    }\n  </tr>\n)\n\nclass Worklist extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n      activePage: 1,\n      rows: 10,\n      pages: 10\n    }\n\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  handlePageChange(pageNumber) {\n    console.log('Cambio de pagina')\n    console.log('Pagina activa: ' + this.state.activePage)\n    console.log('Registros por pagina: ' + this.state.rows)\n    console.log('Paginas a mostrar: ' + this.state.pages)\n    \n    this.setState({activePage: pageNumber})\n    this.request()\n  }\n\n\n  componentWillMount() {\n    this.request()\n  }\n\n  request() {\n    this.setState({ users: []})\n    fetch('https://randomuser.me/api/?page=' + this.state.activePage + '&results=' + this.state.rows + '&seed=abc')\n      .then(response => response.json())\n      .then(users => {\n        users.results.forEach(user => {\n          let data = {\n            name: user.name.first,\n            email: user.email,\n            status: 'Ok',\n            key: user.login.uuid\n          }\n          this.setState({ users: this.state.users.concat([data])})\n        })\n      })\n  }\n\n  render() {\n    if (this.state.users.length > 0) {\n      return (\n        <div>\n          <table className=\"table table-responsive-sm table-bordered table-striped table-sm\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody>\n\n              {\n                this.state.users.map(user => (\n                  <User key={user.key} name={user.name} email={user.email} status={user.status} />\n                ))\n              }\n\n            </tbody>\n          </table>\n          \n          <div>\n        <Pagination\n          activePage={this.state.activePage}\n          itemsCountPerPage={this.state.rows}\n          totalItemsCount={100}\n          pageRangeDisplayed={this.state.pages}\n          onChange={this.handlePageChange}\n        />\n      </div>\n\n        </div>\n      );\n    }\n    return (\n      <p>Loading...</p>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Worklist />,\n  document.getElementById('worklist'), null\n);\n"]},"metadata":{},"sourceType":"module"}